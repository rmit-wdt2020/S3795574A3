@model  List<ChartViewModel>
@{
    ViewData["Title"] = "Chart";
}
<div class="jumbotron">
    <h1>Transaction Chart</h1>
    <p>Display transaction history in chart.</p>
</div>
<div class="container">
    <div class="btn-group" role="group">
        <a class="btn btn-primary" asp-controller="UserActivity" asp-action="Chart"
           asp-route-id="@ViewBag.AccountNumber" asp-route-id2="3" role="button">Last 3 day</a>
        <a class="btn btn-primary" asp-controller="UserActivity" asp-action="Chart"
           asp-route-id="@ViewBag.AccountNumber" asp-route-id2="7" role="button">Last 7 day</a>
        <a class="btn btn-primary" asp-controller="UserActivity" asp-action="Chart"
           asp-route-id="@ViewBag.AccountNumber" asp-route-id2="14" role="button">Last 14 day</a>
        <a class="btn btn-primary" asp-controller="UserActivity" asp-action="Chart"
           asp-route-id="@ViewBag.AccountNumber" asp-route-id2="" role="button">ALL</a>
    </div>
</div>
<div>
    <canvas id="myChart" width="400" height="400"></canvas>
    <script>        
        @{ 
             var labels = new List<string>();
             var data = new List<int>();
             foreach(var c in Model)
             {
                 labels.Add(c.Date);
                 data.Add(c.Count);
             }
         }
        var canvas = document.getElementById("myChart");
        var myChart = new Chart(canvas, {
        type: "bar",
        data: {
          labels: labels,
          datasets: [{
            label: "Transaction count",
            data: data,
            options: {
              scales: {
                xAxes: [{
                  type: "time",
                  time: {
                    unit: "day"
                  }
                }]
              }
            },
            backgroundColor: "rgba(255, 99, 132, 0.2)",
            borderColor: "rgba(255, 99, 132, 1)",
            borderWidth: 1
          }]
        }
      });
    </script>
</div>